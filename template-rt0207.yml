# 課題用のCloudFormationテンプレート
AWSTemplateFormatVersion: '2010-09-09'
Description: Create VPC,EC2,ELB

# Parametersセクション
Parameters:
  VpcCIDR:
    Type: String
    Default: 10.0.0.0/16
  PublicSubnet1aCIDR:
    Type: String
    Default: 10.0.0.0/24
  PublicSubnet1cCIDR:
    Type: String
    Default: 10.0.1.0/24
  PrivateSubnet1aCIDR:
    Type: String
    Default: 10.0.2.0/24
  PrivateSubnet1cCIDR:
    Type: String
    Default: 10.0.3.0/24
  AllCIDR:
    Type: String
    Default: 0.0.0.0/0


# Resourcesセクション
Resources:
  # VPC定義
  Vpc-rt0207:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: Vpc-rt0207

  # インターネットゲートウェイ定義
  InternetGateway-rt0207:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: InternetGateway-rt0207

  # インターネットゲートウェイ-VPC関連付け定義
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway-rt0207
      VpcId: !Ref Vpc-0207

  # パブリックサブネット定義
  PublicSubnet1a-rt0207:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1a
      CidrBlock: !Ref PublicSubnet1aCIDR
      VpcId: !Ref Vpc-rt0207
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: PublicSubnet1a-rt0207
  PublicSubnet1c-rt0207:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1c
      CidrBlock: !Ref PublicSubnet1cCIDR
      VpcId: !Ref Vpc-rt0207
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: PublicSubnet1c-rt0207

  # プライベートサブネット定義
  PrivateSubnet1a-rt0207:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1a
      CidrBlock: !Ref PrivateSubnet1aCIDR
      VpcId: !Ref Vpc-rt0207
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: PrivateSubnet1a-rt0207
  PrivateSubnet1c-rt0207:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1c
      CidrBlock: !Ref PrivateSubnet1cCIDR
      VpcId: !Ref Vpc-rt0207
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: PrivateSubnet1c-rt0207

  # セキュリティグループ定義
  SecurityGroup-rt0207:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: SecurityGroup-rt0207
      SecurityGroupIngress:
        - CidrIp: !Ref AllCIDR
          Description: inbound for ssh
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - CidrIp: !Ref AllCIDR
          Description: inbound for http
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      SecurityGroupEgress:
        - CidrIp: !Ref AllCIDR
          Description: outbound for all
          FromPort: -1
          IpProtocol: -1
          ToPort: -1
      VpcId: !Ref VpcForLive
      Tags:
        - Key: Name
          Value: SecurityGroup-rt0207
  RDSSecurityGroup-rt0207:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: RDSSecurityGroup-rt0207
      SecurityGroupIngress:
        - CidrIp: !Ref AllCIDR
          Description: inbound for mysql
          FromPort: 3306
          IpProtocol: tcp
          ToPort: 3306
      SecurityGroupEgress:
        - CidrIp: !Ref AllCIDR
          Description: outbound for all
          FromPort: -1
          IpProtocol: -1
          ToPort: -1
      VpcId: !Ref Vpc-rt0207
      Tags:
        - Key: Name
          Value: RDSSecurityGroup-rt0207

  # ルートテーブル定義
  PublicRouteTable-rt0207:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc-rt0207
      Tags:
        - Key: Name
          Value: PublicRouteTable-rt0207
  DefaultPublicRouteTable-rt0207:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable-rt0207
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway-rt0207
  PublicSubnet1RouteTableAssociation-rt0207:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable-rt0207
      SubnetId: !Ref PublicSubnet1a-rt0207
  PublicSubnet2RouteTableAssociation-rt0207:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable-rt0207
      SubnetId: !Ref PublicSubnet1c-rt0207

  # EIP定義
  EIP-rt0207:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: EIP-rt0207

  #EIP-EC2関連定義
  EIPToEC2-rt0207:
    Type: AWS::EC2::EIPAssociation
    Properties:
      EIP: !Ref EIP-rt0207
      InstanceId: !Ref EC2-1a-rt0207


  # EC2インスタンス定義
  EC2-1a-rt0207:
    Type: AWS::EC2::Instance
    Properties:
      DisableApiTermination: false
      ImageId: ami-01748a72bed07727c
      InstanceInitiatedShutdownBehavior: stop
      InstanceType: t2.micro
      KeyName: key-pair-01
      Monitoring: false
      SecurityGroupIds:
        - !Ref SecurityGroup-rt0207
      SourceDestCheck: true
      SubnetId: !Ref PublicSubnet1a-rt0207
      Tags:
        - Key: Name
          Value: EC2-1a-rt0207
      Tenancy: default

  EC2-1c-rt0207:
    Type: AWS::EC2::Instance
    Properties:
      DisableApiTermination: false
      ImageId: ami-01748a72bed07727c
      InstanceInitiatedShutdownBehavior: stop
      InstanceType: t2.micro
      KeyName: key-pair-01
      Monitoring: false
      SecurityGroupIds:
        - !Ref SecurityGroup-rt0207
      SourceDestCheck: true
      SubnetId: !Ref PublicSubnet1c-rt0207
      Tags:
        - Key: Name
          Value: EC2-1a-rt0207
      Tenancy: default

  # RDS定義
  RDS-rt0207:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      AllowMajorVersionUpgrade: true
      AutoMinorVersionUpgrade: true
      AvailabilityZone: ap-northeast-1a
      DBInstanceClass: db.t2.micro
      VPCSecurityGroups:
        - !Ref RDSSecurityGroup-rt0207
      DBSubnetGroupName: !Ref RDSSubnetGroup-rt0207
      DeleteAutomatedBackups: false
      DeletionProtection: false
      EnableIAMDatabaseAuthentication: false
      Engine: MySQL
      EngineVersion: 8.0.21
      MasterUsername: root
      MasterUserPassword: rootpass
      MonitoringInterval: 0
      MultiAZ: false
      Port: 3306
      PubliclyAccessible: false
      StorageEncrypted: false
      StorageType: standard
      Tags:
        - Key: Name
          Value: RDS-rt0207
      UseDefaultProcessorFeatures: true

  # RDSサブネットグループ定義
  RDSSubnetGroup-rt0207:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: RDSSubnetGroup-rt0207
      SubnetIds:
        - !Ref PrivateSubnet1a-rt0207
        - !Ref PrivateSubnet1c-rt0207
      Tags:
        - Key: Name
          Value: RDSSubnetGroup-rt0207
